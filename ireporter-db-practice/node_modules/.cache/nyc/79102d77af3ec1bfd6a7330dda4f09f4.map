{"version":3,"sources":["index.spec.js"],"names":["chai","use","chaiHttp","describe","it","done","request","app","get","end","err","res","status","should","eql","body","be","an","have","keys","error","post","which","has"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEAA,eAAKC,GAAL,CAASC,kBAAT;;AAEAC,SAAS,yBAAT,EAAoC,MAAM;AACtCC,OAAG,mFAAH,EAAyFC,IAAD,IAAU;AAC9FL,uBAAKM,OAAL,CAAaC,gBAAb,EACKC,GADL,CACS,mBADT,EAEKC,GAFL,CAES,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,gBAAID,GAAJ,EAASL,KAAKK,GAAL;;AAETC,gBAAIC,MAAJ,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,GAAtB;AACAH,gBAAII,IAAJ,CAASF,MAAT,CAAgBG,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACAN,gBAAII,IAAJ,CAASF,MAAT,CAAgBK,IAAhB,CAAqBC,IAArB,CAA0B,CAAC,QAAD,EAAW,OAAX,CAA1B;AACAR,gBAAII,IAAJ,CAASH,MAAT,CAAgBC,MAAhB,CAAuBC,GAAvB,CAA2B,GAA3B;AACAH,gBAAII,IAAJ,CAASK,KAAT,CAAeP,MAAf,CAAsBC,GAAtB,CAA0B,oDAA1B;AACAT;AACH,SAXL;AAYH,KAbD;;AAeAD,OAAG,mFAAH,EAAyFC,IAAD,IAAU;AAC9FL,uBAAKM,OAAL,CAAaC,gBAAb,EACKc,IADL,CACU,oBADV,EAEKZ,GAFL,CAES,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,gBAAID,GAAJ,EAASL,KAAKK,GAAL;;AAETC,gBAAIC,MAAJ,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,GAAtB;AACAH,gBAAII,IAAJ,CAASF,MAAT,CAAgBG,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB,EAAgCK,KAAhC,CAAsCC,GAAtC,CAA0CJ,IAA1C,CAA+C,CAAC,QAAD,EAAW,OAAX,CAA/C;AACAR,gBAAII,IAAJ,CAASH,MAAT,CAAgBC,MAAhB,CAAuBC,GAAvB,CAA2B,GAA3B;AACAH,gBAAII,IAAJ,CAASK,KAAT,CAAeP,MAAf,CAAsBC,GAAtB,CAA0B,oDAA1B;AACAT;AACH,SAVL;AAWH,KAZD;AAaH,CA7BD","file":"index.spec.js","sourceRoot":"/home/enejakc/Documents/projects/ireporter-db-practice/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../server';\n\nchai.use(chaiHttp);\n\ndescribe('GET /nonexisting-routes', () => {\n    it('should respond with status 404, and an error message for a non existing GET route', (done) => {\n        chai.request(app)\n            .get('/nonexistentroute')\n            .end((err, res) => {\n                if (err) done(err);\n\n                res.status.should.eql(404);\n                res.body.should.be.an('object');\n                res.body.should.have.keys(['status', 'error']);\n                res.body.status.should.eql(404);\n                res.body.error.should.eql('the specified route cannot be found on this server');\n                done();\n            });\n    });\n\n    it('should respond with status 404 and an error message for a non existing POST route', (done) => {\n        chai.request(app)\n            .post('/nonexistent-route')\n            .end((err, res) => {\n                if (err) done(err);\n\n                res.status.should.eql(404);\n                res.body.should.be.an('object').which.has.keys(['status', 'error']);\n                res.body.status.should.eql(404);\n                res.body.error.should.eql('the specified route cannot be found on this server');\n                done();\n            });\n    });\n});\n"]}