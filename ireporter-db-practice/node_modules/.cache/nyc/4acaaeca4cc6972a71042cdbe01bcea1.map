{"version":3,"sources":["authRouter.js"],"names":["router","Router","storage","multer","diskStorage","destination","req","file","callback","filename","originalname","fileFilter","mimetype","upload","limits","fileSize","post","single","Inspect","signup"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,IAAIC,eAAJ,EAAf;;AAEA,MAAMC,UAAUC,iBAAOC,WAAP,CAAmB;AACjCC,cAAYC,GAAZ,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;AAC/BA,aAAS,IAAT,EAAe,WAAf;AACD,GAHgC;AAIjCC,WAASH,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8B;AAC5BA,aAAS,IAAT,EAAeD,KAAKG,YAApB;AACD;AANgC,CAAnB,CAAhB;;AASA,MAAMC,aAAa,CAACL,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAC1C,MAAID,KAAKK,QAAL,KAAkB,YAAlB,IAAkCL,KAAKK,QAAL,KAAkB,WAAxD,EAAqE;AACnEJ,aAAS,IAAT,EAAe,IAAf,EADmE,CAC7C;AACvB,GAFD,MAEO;AACLA,aAAS,IAAT,EAAe,KAAf,EADK,CACkB;AACxB;AACF,CAND;;AAQA,MAAMK,SAAS,sBAAO;AACpBX,SADoB;AAEpBY,UAAQ;AACNC,cAAU,OAAO,IAAP,GAAc;AADlB,GAFY;AAKpBJ;AALoB,CAAP,CAAf;;AAQAX,OAAOgB,IAAP,CAAY,SAAZ,EAAuBH,OAAOI,MAAP,CAAc,SAAd,CAAvB,EAAiDC,oBAAQC,MAAzD;AACA;AACA;;kBAEenB,M","file":"authRouter.js","sourceRoot":"/home/enejakc/Documents/projects/ireporter-db-practice/server/routes","sourcesContent":["import { Router } from 'express';\nimport multer from 'multer';\nimport Inspect from '../middleware/inspector';\nimport AuthController from '../controllers/authController';\nimport AuthHandler from '../middleware/authHandler';\n\nconst router = new Router();\n\nconst storage = multer.diskStorage({\n  destination(req, file, callback) {\n    callback(null, './uploads');\n  },\n  filename(req, file, callback) {\n    callback(null, file.originalname);\n  },\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype === 'image/jpeg' || file.mimetype === 'image/png') {\n    callback(null, true); // accept the file\n  } else {\n    callback(null, false); // reject the file: don't save the file, but do not throw an error\n  }\n};\n\nconst upload = multer({\n  storage,\n  limits: {\n    fileSize: 1024 * 1024 * 5,\n  },\n  fileFilter,\n});\n\nrouter.post('/signup', upload.single('picture'), Inspect.signup);\n// router.post('/signup', upload.single('picture'), Inspect.signup, AuthController.signup, AuthController.signin, AuthHandler.generateAuthToken);\n// router.post('/login', Inspect.signin, AuthController.signin, AuthHandler.generateAuthToken);\n\nexport default router;\n"]}